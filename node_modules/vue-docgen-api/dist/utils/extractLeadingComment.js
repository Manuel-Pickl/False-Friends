"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Extract leading comments to an html node
 * Even if the comment is on multiple lines it's still taken as a whole
 * @param templateAst
 * @param rootLeadingComment
 */
function extractLeadingComment(parentAst, templateAst, rootLeadingComment) {
    var comment = '';
    if (parentAst) {
        var slotSiblings = parentAst.children;
        // First find the position of the slot in the list
        var i = slotSiblings.length - 1;
        var currentSlotIndex = -1;
        do {
            if (slotSiblings[i] === templateAst) {
                currentSlotIndex = i;
            }
        } while (currentSlotIndex < 0 && i--);
        // Find the first leading comment
        var slotSiblingsBeforeSlot = slotSiblings.slice(0, currentSlotIndex).reverse();
        for (var _i = 0, slotSiblingsBeforeSlot_1 = slotSiblingsBeforeSlot; _i < slotSiblingsBeforeSlot_1.length; _i++) {
            var potentialComment = slotSiblingsBeforeSlot_1[_i];
            // if there is text between the slot and the comment, ignore
            if (potentialComment.type !== 3 ||
                (!potentialComment.isComment && potentialComment.text.trim().length)) {
                break;
            }
            if (potentialComment.isComment) {
                comment = potentialComment.text.trim() + '\n' + comment;
            }
        }
    }
    else if (rootLeadingComment.length) {
        comment = rootLeadingComment;
    }
    return comment.trim();
}
exports.default = extractLeadingComment;
