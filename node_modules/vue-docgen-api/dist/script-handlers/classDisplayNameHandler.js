"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var bt = __importStar(require("@babel/types"));
var getArgFromDecorator_1 = __importDefault(require("../utils/getArgFromDecorator"));
function classDisplayNameHandler(documentation, path) {
    if (bt.isClassDeclaration(path.node)) {
        var config = getArgFromDecorator_1.default(path.get('decorators'));
        var displayName_1;
        if (config && bt.isObjectExpression(config.node)) {
            config
                .get('properties')
                .filter(function (p) { return bt.isObjectProperty(p.node) && p.node.key.name === 'name'; })
                .forEach(function (p) {
                var valuePath = p.get('value');
                if (bt.isStringLiteral(valuePath.node)) {
                    displayName_1 = valuePath.node.value;
                }
            });
        }
        else {
            displayName_1 = path.node.id ? path.node.id.name : undefined;
        }
        if (displayName_1) {
            documentation.set('displayName', displayName_1);
        }
    }
}
exports.default = classDisplayNameHandler;
